{"version":3,"sources":["Key.js","Letter.js","Counter.js","App.js","reportWebVitals.js","index.js"],"names":["Key","letter","value","feedback","onClick","onTouchStart","className","Letter","Counter","counter","status","words","App","getFeedback","bind","newGame","testLetter","state","keyboard","getKeyboard","word","getWord","response","bgColor","display","btnText","help","toUpperCase","split","index","Math","floor","random","length","e","this","letterToTest","currentTarget","key","setState","includes","previousState","getStatus","filter","elt","goodResponse","join","window","addEventListener","removeEventListener","style","backgroundColor","map","i","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAiBeA,MAff,YAAgE,IAAlDC,EAAiD,EAAjDA,OAAQC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,aAC5C,OACI,wBACIC,UAAS,0BAAqBH,EAC5B,MACA,aACFD,MAAOA,EACPE,QAASA,EACTC,aAAcA,EANlB,SAOI,mBAAGC,UAAU,OAAb,SAAqBL,OCClBM,MAVf,YAAqC,IAApBN,EAAmB,EAAnBA,OAAQE,EAAW,EAAXA,SACrB,OACI,qBAAKG,UAAU,cAAf,SACI,mBAAGA,UAAWH,EACR,SACA,UAFN,SAEkBF,OCEfO,MAPf,YAAsC,IAApBC,EAAmB,EAAnBA,QACd,OADiC,EAAVC,OAEnB,sBAAKJ,UAAU,MAAf,UAAsBG,EAAtB,qBCGFE,EAAQ,CACV,QACA,UACA,OACA,SACA,UACA,SACA,SACA,SACA,OACA,OACA,UACA,UACA,MACA,QACA,SACA,WACA,UACA,YACA,UACA,YACA,SACA,MACA,SACA,UACA,aACA,SACA,SACA,MACA,UACA,UACA,UACA,QACA,WACA,YACA,QACA,SACA,UACA,QACA,QACA,UACA,YACA,QACA,SACA,UACA,MACA,UACA,WACA,SACA,QACA,UACA,WACA,QACA,SACA,WACA,QACA,QACA,SACA,WACA,UACA,WACA,UACA,UACA,SACA,WACA,UACA,WACA,SACA,SACA,UACA,YACA,QACA,SACA,UACA,aACA,SACA,SACA,SACA,QACA,SACA,QACA,MACA,OACA,UACA,SACA,SACA,SACA,SACA,SACA,OACA,OACA,OACA,OACA,MACA,QACA,QACA,SACA,OACA,KACA,WACA,SACA,KACA,OACA,MACA,SACA,QACA,SACA,OACA,QACA,SACA,YACA,SACA,YAoKWC,E,kDAhKX,aAAe,IAAD,8BACV,gBAEKC,YAAc,EACdA,YACAC,KAFc,gBAInB,EAAKC,QAAU,EACVA,QACAD,KAFU,gBAIf,EAAKE,WAAa,EACbA,WACAF,KAFa,gBAIlB,EAAKG,MAAQ,CACTC,SAAU,EAAKC,cACfC,KAAM,EAAKC,UACXC,S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","file":"static/js/main.cc179f4e.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Key({letter, value, feedback, onClick, onTouchStart}) {\n    return (\n        <button\n            className={`keyboard-letter ${feedback\n            ? 'key'\n            : 'key-right'}`}\n            value={value}\n            onClick={onClick}\n            onTouchStart={onTouchStart}>\n            <p className='text'>{letter}</p>\n        </button>\n    )\n\n}\n\nexport default Key","import React from 'react';\n\nfunction Letter({letter, feedback}) {\n    return (\n        <div className=\"word-letter\">\n            <p className={feedback\n                ? 'hidden'\n                : 'visible'}>{letter}</p>\n        </div>\n    )\n}\n\nexport default Letter","import React from 'react'\n\nfunction Counter({counter, status})  {\n    return (\n        <div className=\"box\">{counter} coups restant\n    </div>\n    )\n}\n\nexport default Counter","import React from 'react'\nimport './App.css';\nimport Key from './Key'\nimport Letter from './Letter'\nimport Counter from './Counter'\n\nconst azerty = \"azertyuiopqsdfghjklmwxcvbn\"\nconst words = [\n    \"ANGLE\",\n    \"ARMOIRE\",\n    \"BANC\",\n    \"BUREAU\",\n    \"CABINET\",\n    \"CARREA\",\n    \"CHAISE\",\n    \"CLASSE\",\n    \"CLEF\",\n    \"COIN\",\n    \"COULOIR\",\n    \"DOSSIER\",\n    \"EAU\",\n    \"ECOLE\",\n    \"ENTRER\",\n    \"ESCALIER\",\n    \"ETAGERE\",\n    \"EXTERIEUR\",\n    \"FENETRE\",\n    \"INTERIEUR\",\n    \"LAVABO\",\n    \"LIT\",\n    \"MARCHE\",\n    \"MATELAS\",\n    \"MATERNELLE\",\n    \"MEUBLE\",\n    \"MOUSSE\",\n    \"MUR\",\n    \"PELUCHE\",\n    \"PLACARD\",\n    \"PLAFOND\",\n    \"PORTE\",\n    \"POUBELLE\",\n    \"RADIATEUR\",\n    \"RAMPE\",\n    \"RIDEAU\",\n    \"ROBINET\",\n    \"SALLE\",\n    \"SALON\",\n    \"SERRURE\",\n    \"SERVIETTE\",\n    \"SIEGE\",\n    \"SIESTE\",\n    \"SILENCE\",\n    \"SOL\",\n    \"SOMMEIL\",\n    \"SONNETTE\",\n    \"SORTIE\",\n    \"TABLE\",\n    \"TABLEAU\",\n    \"TABOURET\",\n    \"TAPIS\",\n    \"TIROIR\",\n    \"TOILETTE\",\n    \"VITRE\",\n    \"ALLER\",\n    \"AMENER\",\n    \"APPORTER\",\n    \"APPUYER\",\n    \"ATTENDRE\",\n    \"BAILLER\",\n    \"COUCHER\",\n    \"DORMIR\",\n    \"ECLAIRER\",\n    \"EMMENER\",\n    \"EMPORTER\",\n    \"ENTRER\",\n    \"FERMER\",\n    \"FRAPPER\",\n    \"INSTALLER\",\n    \"LEVER\",\n    \"OUVRIR\",\n    \"PRESSER\",\n    \"RECHAUFFER\",\n    \"RESTER\",\n    \"SONNER\",\n    \"SORTIR\",\n    \"VENIR\",\n    \"ABSENT\",\n    \"ASSIS\",\n    \"BAS\",\n    \"HAUT\",\n    \"PRESENT\",\n    \"GAUCHE\",\n    \"DROITE\",\n    \"DEBOUT\",\n    \"DEDANS\",\n    \"DEHORS\",\n    \"FACE\",\n    \"LOIN\",\n    \"PRES\",\n    \"TARD\",\n    \"TOT\",\n    \"APRES\",\n    \"AVANT\",\n    \"CONTRE\",\n    \"DANS\",\n    \"DE\",\n    \"DERRIERE\",\n    \"DEVANT\",\n    \"DU\",\n    \"SOUS\",\n    \"SUR\",\n    \"CRAYON\",\n    \"STYLO\",\n    \"FEUTRE\",\n    \"MINE\",\n    \"GOMME\",\n    \"DESSIN\",\n    \"COLORIAGE\",\n    \"RAYURE\",\n    \"PEINTURE\"\n]\n\nclass App extends React.Component {\n    constructor() {\n        super()\n\n        this.getFeedback = this\n            .getFeedback\n            .bind(this)\n\n        this.newGame = this\n            .newGame\n            .bind(this)\n\n        this.testLetter = this\n            .testLetter\n            .bind(this)\n\n        this.state = {\n            keyboard: this.getKeyboard(),\n            word: this.getWord(),\n            response: [],\n            counter: 8,\n            status: 'Jeu du pendu',\n            bgColor: '#111111',\n            display: 'flex',\n            btnText: 'Commencer',\n            help: ''\n        }\n    }\n\n    getKeyboard() {\n        return azerty\n            .toUpperCase()\n            .split('')\n    }\n\n    getWord() {\n        const index = Math.floor(Math.random() * words.length)\n        return words[index]\n            .toUpperCase()\n            .split('')\n    }\n\n    testLetter(e) {\n        const {response, word} = this.state;\n        const letterToTest = e.currentTarget.value || e\n            .key\n            .toUpperCase();\n\n        this.setState({\n            response: [\n                ...response,\n                letterToTest\n            ]\n        })\n\n        word.includes(letterToTest)\n            ? this.setState((previousState) => ({counter: previousState.counter}), this.getStatus)\n            : this.setState((previousState) => ({\n                counter: previousState.counter - 1\n            }), this.getStatus)\n    }\n\n    newGame() {\n        this.setState({\n            word: this.getWord(),\n            response: [],\n            counter: 8,\n            status: 'en cours',\n            display: 'none'\n        })\n    }\n\n    getFeedback(letter) {\n        const {response, word} = this.state;\n        const goodResponse = word.filter(elt => response.includes(elt))\n        if (goodResponse.includes(letter)) {\n            return false\n        }\n        return true\n    }\n\n    getStatus() {\n        const {response, word, counter} = this.state;\n        const goodResponse = word.filter(elt => response.includes(elt))\n\n        counter > 0\n            ? goodResponse.join('') === word.join('')\n                ? this.setState({\n                    status: 'Gagné',\n                    bgColor: 'green',\n                    display: 'flex',\n                    help: `La réponse était ${word.join('')}`,\n                    btnText: 'Nouvelle partie'\n                })\n                : this.setState({status: 'en cours', bgColor: 'grey'})\n            : this.setState({\n                status: 'Perdu',\n                bgColor: 'red',\n                display: 'flex',\n                help: `La réponse était ${word.join('')}`,\n                btnText: 'Nouvelle partie'\n            })\n\n    }\n\n    componentDidUpdate() {\n        this.state.display === 'none'\n            ? window.addEventListener('keypress', this.testLetter)\n            : window.removeEventListener('keypress', this.testLetter)\n    }\n\n    render() {\n\n        const {\n            word,\n            counter,\n            status,\n            bgColor,\n            display,\n            btnText,\n            help\n        } = this.state\n\n        return (\n            <div className=\"App\">\n                <div\n                    className=\"intro\"\n                    style={{\n                    backgroundColor: `${bgColor}`,\n                    display: `${display}`\n                }}>\n                    <h1>{status}</h1>\n                    <p>{help}</p>\n                    <button className=\"reset\" onClick={this.newGame}>{btnText}</button>\n                </div>\n                <div className=\"statebox\">\n                    <Counter counter={counter} status={status}/>\n                    <button className=\"reset\" onClick={this.newGame}>Nouvelle Partie</button>\n                </div>\n\n                <div className='word'>\n                    {word.map((letter, i) => <Letter key={i} letter={letter} feedback={this.getFeedback(letter)}/>)}\n                </div>\n                <div className='keyboard'>\n                    {this\n                        .state\n                        .keyboard\n                        .map((letter, i) => <Key\n                            key={i}\n                            value={letter}\n                            letter={letter}\n                            feedback={this.getFeedback(letter)}\n                            onClick={this.testLetter}/>)}\n                </div>\n            </div>\n        )\n\n    }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}